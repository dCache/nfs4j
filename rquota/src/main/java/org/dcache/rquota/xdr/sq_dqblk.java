/*
 * Automatically generated by jrpcgen 1.0.7+ on 6/19/24, 7:09 PM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 *
 * This version of jrpcgen adopted by dCache project
 * See http://www.dCache.ORG for details
 */
package org.dcache.rquota.xdr;

import java.io.IOException;

import org.dcache.oncrpc4j.rpc.*;
import org.dcache.oncrpc4j.rpc.net.*;
import org.dcache.oncrpc4j.xdr.*;

public class sq_dqblk implements XdrAble {
    public int rq_bhardlimit;
    public int rq_bsoftlimit;
    public int rq_curblocks;
    public int rq_fhardlimit;
    public int rq_fsoftlimit;
    public int rq_curfiles;
    public int rq_btimeleft;
    public int rq_ftimeleft;

    public sq_dqblk() {
    }

    public sq_dqblk(XdrDecodingStream xdr)
            throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
            throws OncRpcException, IOException {
        xdr.xdrEncodeInt(rq_bhardlimit);
        xdr.xdrEncodeInt(rq_bsoftlimit);
        xdr.xdrEncodeInt(rq_curblocks);
        xdr.xdrEncodeInt(rq_fhardlimit);
        xdr.xdrEncodeInt(rq_fsoftlimit);
        xdr.xdrEncodeInt(rq_curfiles);
        xdr.xdrEncodeInt(rq_btimeleft);
        xdr.xdrEncodeInt(rq_ftimeleft);
    }

    public void xdrDecode(XdrDecodingStream xdr)
            throws OncRpcException, IOException {
        rq_bhardlimit = xdr.xdrDecodeInt();
        rq_bsoftlimit = xdr.xdrDecodeInt();
        rq_curblocks = xdr.xdrDecodeInt();
        rq_fhardlimit = xdr.xdrDecodeInt();
        rq_fsoftlimit = xdr.xdrDecodeInt();
        rq_curfiles = xdr.xdrDecodeInt();
        rq_btimeleft = xdr.xdrDecodeInt();
        rq_ftimeleft = xdr.xdrDecodeInt();
    }

}
// End of sq_dqblk.java
